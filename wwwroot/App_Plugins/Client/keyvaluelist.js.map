{"version":3,"file":"keyvaluelist.js","sources":["../../../App_Plugins/Client/src/key-value-list-editor.element.ts"],"sourcesContent":["import { css, customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbPropertyValueChangeEvent } from '@umbraco-cms/backoffice/property-editor';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/extension-registry';\r\nimport type { UUIInputEvent, UUIInputElement } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbSorterController, UmbSorterConfig } from '@umbraco-cms/backoffice/sorter';\r\nimport { repeat } from '@umbraco-cms/backoffice/external/lit';\r\n\r\ninterface KeyValueItem {\r\n    key: string;\r\n    value: string;\r\n    isDefault?: boolean;\r\n}\r\n\r\n@customElement('key-value-list-editor')\r\nexport class KeyValueListEditorElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n    @property({ type: Array })\r\n    value: Array<KeyValueItem> = [];\r\n\r\n    @state()\r\n    private _items: Array<KeyValueItem> = [];\r\n\r\n    private static generateUniqueId(item: KeyValueItem): string {\r\n        // Remove spaces and special characters, convert to lowercase\r\n        const key = item.key.toLowerCase().replace(/[^a-z0-9]/g, '');\r\n        const value = item.value.toLowerCase().replace(/[^a-z0-9]/g, '');\r\n        return `${key}_${value}`;\r\n    }\r\n\r\n    // Define sorter config separately\r\n    private static SORTER_CONFIG: UmbSorterConfig<KeyValueItem, HTMLElement> = {\r\n        itemSelector: '.item-container',\r\n        containerSelector: '.items-container',\r\n        getUniqueOfElement: (element) => {\r\n            const id = element.getAttribute('data-item-id');\r\n            console.log('getUniqueOfElement', id);\r\n            return id || '';\r\n        },\r\n        getUniqueOfModel: (item) => {\r\n            const id = KeyValueListEditorElement.generateUniqueId(item);\r\n            console.log('getUniqueOfModel', id);\r\n            return id;\r\n        }\r\n    };\r\n\r\n    override createRenderRoot() {\r\n        const root = this.attachShadow({\r\n            mode: 'open',\r\n            delegatesFocus: true\r\n        });\r\n        // Ensure styles are adopted\r\n        const sheet = new CSSStyleSheet();\r\n        sheet.replaceSync(KeyValueListEditorElement.styles[0].cssText);\r\n        root.adoptedStyleSheets = [sheet];\r\n        return root;\r\n    }\r\n\r\n    // Initialize sorter with config\r\n    #sorter = new UmbSorterController<KeyValueItem, HTMLElement>(this, {\r\n        ...KeyValueListEditorElement.SORTER_CONFIG,\r\n        onChange: ({ model }) => {\r\n            const oldValue = this._items;\r\n            this._items = [...model];\r\n            this.requestUpdate('_items', oldValue);\r\n            this.dispatchChange();\r\n        },\r\n    });\r\n\r\n    @property({ type: Boolean, reflect: true })\r\n    public get readonly() {\r\n        return this.#readonly;\r\n    }\r\n    public set readonly(value: boolean) {\r\n        this.#readonly = value;\r\n        if (this.#readonly) {\r\n            this.#sorter.disable();\r\n        } else {\r\n            this.#sorter.enable();\r\n        }\r\n    }\r\n    #readonly = false;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if (this.value && this.value.length > 0) {\r\n            this._items = [...this.value];\r\n            this.#sorter.setModel(this._items);\r\n        }\r\n    }\r\n\r\n    willUpdate(changedProperties: Map<string, any>) {\r\n        super.willUpdate(changedProperties);\r\n\r\n        if (changedProperties.has('value') && this.value) {\r\n            this._items = [...this.value];\r\n            this.#sorter.setModel(this._items);\r\n        }\r\n    }\r\n\r\n    #addItem() {\r\n        const newItems = [\r\n            ...this._items,\r\n            { key: '', value: '', isDefault: false }\r\n        ];\r\n        this._items = newItems;\r\n        this.#sorter.setModel(newItems);\r\n        this.dispatchChange();\r\n        this.#focusNewItem();\r\n    }\r\n\r\n    async #focusNewItem() {\r\n        await this.updateComplete;\r\n        const items = this.shadowRoot?.querySelectorAll<UUIInputElement>('uui-input[label=\"Key\"]');\r\n        if (items) {\r\n            const lastItem = items[items.length - 1];\r\n            if (lastItem) {\r\n                console.log('Focusing new item key input');\r\n                lastItem.focus();\r\n                // Optionally, we might need to select the input text\r\n                lastItem.select?.();\r\n            }\r\n        }\r\n    }\r\n\r\n    #removeItem(index: number) {\r\n        const newItems = this._items.filter((_, i) => i !== index);\r\n        this._items = newItems;\r\n        this.#sorter.setModel(newItems);\r\n        this.dispatchChange();\r\n    }\r\n\r\n    #updateItem(index: number, field: 'key' | 'value', newValue: string) {\r\n        // Create new array with the same references except for the updated item\r\n        this._items = this._items.map((item, i) =>\r\n            i === index\r\n                ? { ...item, [field]: newValue }\r\n                : item\r\n        );\r\n\r\n        this.requestUpdate();\r\n        this.dispatchChange();\r\n    }\r\n\r\n    #setDefault(index: number) {\r\n        this._items = this._items.map((item, i) => ({\r\n            ...item,\r\n            isDefault: i === index ? (item.isDefault ? false : true) : false\r\n        }));\r\n        this.dispatchChange();\r\n    }\r\n\r\n    private dispatchChange() {\r\n        this.value = this._items;\r\n        this.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <div class=\"flex flex-col\">\r\n                <div class=\"items-container\">\r\n                    ${repeat(\r\n            this._items,\r\n            (item) => KeyValueListEditorElement.generateUniqueId(item),\r\n            (item, index) => {\r\n                const itemId = KeyValueListEditorElement.generateUniqueId(item);\r\n                return html`\r\n                                <div \r\n                                    class=\"item-container\"\r\n                                    id=\"${itemId}\"\r\n                                    data-item-id=\"${itemId}\"\r\n                                    ?disabled=${this.readonly}>\r\n                                    <uui-button \r\n                                        class=\"drag-handle\"\r\n                                        label=\"Drag to reorder\"\r\n                                        tabindex=\"-1\"\r\n                                        compact>\r\n                                        <uui-icon name=\"icon-navigation\"></uui-icon>\r\n                                    </uui-button>\r\n\r\n                                    <uui-input\r\n                                        label=\"Key\"\r\n                                        .value=${item.key}\r\n                                        placeholder=\"Enter key\"\r\n                                        @change=${(e: UUIInputEvent) =>\r\n                        this.#updateItem(index, 'key', e.target.value as string)}>\r\n                                    </uui-input>\r\n                                    \r\n                                    <uui-input\r\n                                        label=\"Value\"\r\n                                        .value=${item.value}\r\n                                        placeholder=\"Enter value\"\r\n                                        @change=${(e: UUIInputEvent) =>\r\n                        this.#updateItem(index, 'value', e.target.value as string)}>\r\n                                    </uui-input>\r\n\r\n                                    <uui-button\r\n                                        label=\"Set as default\"\r\n                                        look=${item.isDefault ? 'primary' : 'default'}\r\n                                        color=${item.isDefault ? 'positive' : 'default'}\r\n                                        @click=${() => this.#setDefault(index)}>\r\n                                        ${item.isDefault ? 'Default' : 'Set Default'}\r\n                                    </uui-button>\r\n\r\n                                    <uui-button\r\n                                        label=\"Remove\"\r\n                                        color=\"danger\"\r\n                                        @click=${() => this.#removeItem(index)}>\r\n                                        <uui-icon name=\"icon-trash\"></uui-icon>\r\n                                    </uui-button>\r\n                                </div>\r\n                            `;\r\n            }\r\n        )}\r\n                </div>\r\n\r\n                <div class=\"add-item-container\">\r\n                    <uui-button\r\n                        label=\"Add item\"\r\n                        look=\"primary\"\r\n                        @click=${this.#addItem}>\r\n                        Add Item\r\n                    </uui-button>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n                padding: var(--uui-size-space-2);\r\n            }\r\n\r\n            .items-container {\r\n                display: flex;\r\n                flex-direction: column;\r\n                gap: var(--uui-size-space-3);\r\n                margin-bottom: var(--uui-size-space-4);\r\n            }\r\n\r\n            .item-container {\r\n                cursor: default;\r\n                background: var(--uui-color-surface);\r\n                border-radius: var(--uui-border-radius);\r\n                padding: var(--uui-size-space-1);\r\n                display: grid;\r\n                grid-template-columns: auto 1fr 1fr 120px auto;\r\n                gap: var(--uui-size-space-3);\r\n                align-items: center;\r\n                transition: all 120ms ease-in-out;\r\n            }\r\n\r\n            .item-container[disabled] {\r\n                opacity: 0.7;\r\n                pointer-events: none;\r\n            }\r\n\r\n            .drag-handle {\r\n                cursor: move;\r\n                color: var(--uui-color-text-alt);\r\n                transition: all 120ms ease;\r\n                width: 40px;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n\r\n            .drag-handle:hover {\r\n                color: var(--uui-color-text);\r\n                background: var(--uui-color-surface-emphasis);\r\n                border-color: var(--uui-color-border-emphasis);\r\n            }\r\n\r\n            uui-input {\r\n                min-width: 200px;\r\n            }\r\n\r\n            /* Draggable styles */\r\n            .draggable-mirror {\r\n                background: var(--uui-color-surface);\r\n                border: 1px solid var(--uui-color-border-emphasis);\r\n                border-radius: var(--uui-border-radius);\r\n                padding: var(--uui-size-space-4);\r\n                box-shadow: var(--uui-shadow-depth-3);\r\n                opacity: 0.9;\r\n            }\r\n\r\n            .draggable-source--is-dragging {\r\n                opacity: 0.3;\r\n                border: 1px dashed var(--uui-color-border);\r\n            }\r\n\r\n            /* Add item button container */\r\n            .add-item-container {\r\n                margin-top: var(--uui-size-space-2);\r\n            }\r\n\r\n            /* Responsive adjustments */\r\n            @media (max-width: 768px) {\r\n                .item-container {\r\n                    grid-template-columns: auto 1fr auto;\r\n                    gap: var(--uui-size-space-2);\r\n                }\r\n\r\n                uui-input {\r\n                    min-width: 150px;\r\n                    grid-column: 2 / -1;\r\n                }\r\n\r\n                .item-container uui-button:not(.drag-handle) {\r\n                    grid-column: 2 / -1;\r\n                    width: auto;\r\n                }\r\n            }\r\n\r\n            /* Common button styles - matching input height */\r\n            .items-container uui-button {\r\n                height: var(--uui-button-height);\r\n                border: 1px solid var(--uui-color-border);\r\n                border-radius: var(--uui-border-radius);\r\n                transition: all 120ms ease;\r\n            }\r\n\r\n            /* Drag handle */\r\n            .drag-handle {\r\n                cursor: move;\r\n                color: var(--uui-color-text-alt);\r\n                width: var(--uui-button-height);\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n            }\r\n\r\n            /* Default button */\r\n            uui-button[label=\"Set as default\"] {\r\n                width: 120px;\r\n                text-align: center;\r\n                justify-content: center;\r\n            }\r\n\r\n            /* Remove button */\r\n            uui-button[label=\"Remove\"] {\r\n                width: var(--uui-button-height);\r\n            }\r\n\r\n            /* Add item button */\r\n            .add-item-container uui-button {\r\n                border-color: var(--uui-color-primary);\r\n                /* padding: 0 var(--uui-size-space-4); */\r\n            }\r\n\r\n            .add-item-container uui-button:hover {\r\n                background: var(--uui-color-primary-emphasis);\r\n                border-color: var(--uui-color-primary-emphasis);\r\n                color: var(--uui-color-surface);\r\n            }\r\n        `,\r\n    ];\r\n}\r\n\r\nexport default KeyValueListEditorElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'key-value-list-editor': KeyValueListEditorElement;\r\n    }\r\n} "],"names":["_sorter","_readonly","_KeyValueListEditorElement_instances","addItem_fn","focusNewItem_fn","removeItem_fn","updateItem_fn","setDefault_fn","KeyValueListEditorElement","UmbLitElement","__privateAdd","UmbSorterController","model","oldValue","item","key","value","root","sheet","__privateGet","__privateSet","changedProperties","UmbPropertyValueChangeEvent","html","repeat","index","itemId","e","__privateMethod","newItems","items","_a","lastItem","_b","_","i","field","newValue","element","id","css","__decorateClass","property","state","customElement","KeyValueListEditorElement$1"],"mappings":"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"}