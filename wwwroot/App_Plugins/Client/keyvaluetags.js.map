{"version":3,"file":"keyvaluetags.js","sources":["../../../App_Plugins/Client/src/key-value-tags-editor.element.ts"],"sourcesContent":["import { css, customElement, html, property, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbPropertyValueChangeEvent } from '@umbraco-cms/backoffice/property-editor';\r\nimport type { UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UmbSorterController, UmbSorterConfig } from '@umbraco-cms/backoffice/sorter';\r\nimport { repeat } from '@umbraco-cms/backoffice/external/lit';\r\nimport type { UmbTagsInputElement } from '@umbraco-cms/backoffice/tags';\r\nimport '@umbraco-cms/backoffice/tags';\r\n\r\ninterface KeyValueTagItem {\r\n    title: string;\r\n    key: string;\r\n    tags: Array<string>;\r\n}\r\n\r\n@customElement('key-value-tags-editor')\r\nexport class KeyValueTagsEditorElement extends UmbLitElement implements UmbPropertyEditorUiElement {\r\n    @property({ type: Array })\r\n    public value?: Array<KeyValueTagItem>;\r\n\r\n    @property({ type: Object })\r\n    public config: any;\r\n\r\n    @state()\r\n    private _items: Array<KeyValueTagItem> = [];\r\n\r\n    private static generateUniqueId(item: KeyValueTagItem): string {\r\n        const title = item.title.toLowerCase().replace(/[^a-z0-9]/g, '');\r\n        const key = item.key.toLowerCase().replace(/[^a-z0-9]/g, '');\r\n        return `${title}_${key}`;\r\n    }\r\n\r\n    private static SORTER_CONFIG: UmbSorterConfig<KeyValueTagItem, HTMLElement> = {\r\n        itemSelector: '.key-value-tags__item',\r\n        containerSelector: '.key-value-tags',\r\n        getUniqueOfElement: (element) => {\r\n            const id = element.getAttribute('data-item-id');\r\n            return id || '';\r\n        },\r\n        getUniqueOfModel: (item) => {\r\n            return KeyValueTagsEditorElement.generateUniqueId(item);\r\n        }\r\n    };\r\n\r\n    #sorter = new UmbSorterController<KeyValueTagItem, HTMLElement>(this, {\r\n        ...KeyValueTagsEditorElement.SORTER_CONFIG,\r\n        onChange: ({ model }) => {\r\n            const oldValue = this._items;\r\n            this._items = [...model];\r\n            this.requestUpdate('_items', oldValue);\r\n            this.dispatchChange();\r\n        },\r\n    });\r\n\r\n    @property({ type: Boolean, reflect: true })\r\n    public get readonly() {\r\n        return this.#readonly;\r\n    }\r\n    public set readonly(value: boolean) {\r\n        this.#readonly = value;\r\n        if (this.#readonly) {\r\n            this.#sorter.disable();\r\n        } else {\r\n            this.#sorter.enable();\r\n        }\r\n    }\r\n    #readonly = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.value = [];\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if (this.value && this.value.length > 0) {\r\n            this._items = [...this.value];\r\n            this.#sorter.setModel(this._items);\r\n        }\r\n    }\r\n\r\n    willUpdate(changedProperties: Map<string, any>) {\r\n        super.willUpdate(changedProperties);\r\n\r\n        if (changedProperties.has('value') && this.value) {\r\n            this._items = [...this.value];\r\n            this.#sorter.setModel(this._items);\r\n        }\r\n    }\r\n\r\n    private dispatchChange() {\r\n        this.value = this._items;\r\n        this.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <div class=\"key-value-tags\">\r\n                ${repeat(\r\n            this._items,\r\n            (item) => KeyValueTagsEditorElement.generateUniqueId(item),\r\n            (item, index) => {\r\n                const itemId = KeyValueTagsEditorElement.generateUniqueId(item);\r\n                return html`\r\n                            <div \r\n                                class=\"key-value-tags__item\"\r\n                                id=\"${itemId}\"\r\n                                data-item-id=\"${itemId}\"\r\n                                ?disabled=${this.readonly}>\r\n                                \r\n                                <uui-button \r\n                                    class=\"drag-handle\"\r\n                                    label=\"Drag to reorder\"\r\n                                    tabindex=\"-1\"\r\n                                    style=\"min-height: 40px; min-width: 40px;\"\r\n                                    compact>\r\n                                    <uui-icon name=\"icon-navigation\"></uui-icon>\r\n                                </uui-button>\r\n\r\n                                <div class=\"key-value-tags__item-content\">\r\n                                    <div class=\"key-value-tags__item-inputs\">\r\n                                        <uui-input\r\n                                            .value=${item.title}\r\n                                            placeholder=\"Enter title\"\r\n                                            ?readonly=${this.readonly}\r\n                                            @change=${(e: Event) => this.#onTitleChange(index, e)}>\r\n                                        </uui-input>\r\n\r\n                                        <uui-input\r\n                                            .value=${item.key}\r\n                                            placeholder=\"Enter key\"\r\n                                            ?readonly=${this.readonly}\r\n                                            @change=${(e: Event) => this.#onKeyChange(index, e)}>\r\n                                        </uui-input>\r\n                                    </div>\r\n\r\n                                    <umb-tags-input\r\n                                        .value=${item.tags.join(',')}\r\n                                        .items=${item.tags}\r\n                                        .config=${this.config}\r\n                                        ?readonly=${this.readonly}\r\n                                        @change=${(e: CustomEvent) => this.#onTagsChange(index, e)}>\r\n                                    </umb-tags-input>\r\n                                </div>\r\n\r\n                                ${!this.readonly ? html`\r\n                                    <uui-button\r\n                                        compact\r\n                                        look=\"secondary\"\r\n                                        color=\"danger\"\r\n                                        label=\"Remove\"\r\n                                        @click=${() => this.#onRemove(index)}>\r\n                                        <uui-icon name=\"icon-trash\"></uui-icon>\r\n                                    </uui-button>\r\n                                ` : ''}\r\n                            </div>\r\n                        `;\r\n            }\r\n        )}\r\n\r\n                ${!this.readonly ? html`\r\n                    <div class=\"key-value-tags__item\">\r\n                        <div></div>\r\n                        <div class=\"add-item-container\">\r\n                            <uui-button\r\n                                look=\"primary\"\r\n                                label=\"Add item\"\r\n                                @click=${this.#onAdd}>\r\n                                <uui-icon name=\"add\"></uui-icon>\r\n                                Add item\r\n                            </uui-button>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                ` : ''}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            .key-value-tags {\r\n                display: flex;\r\n                flex-direction: column;\r\n                gap: var(--uui-size-space-3);\r\n            }\r\n\r\n            .key-value-tags__item {\r\n                display: grid;\r\n                grid-template-columns: 40px 1fr 55.0278px;\r\n                gap: var(--uui-size-space-3);\r\n                background: var(--uui-color-surface);\r\n                border-radius: var(--uui-border-radius);\r\n                padding: var(--uui-size-space-3) 0;\r\n            }\r\n\r\n            .key-value-tags__item-content {\r\n                display: flex;\r\n                flex-direction: column;\r\n                gap: var(--uui-size-space-3);\r\n                grid-column: 2;\r\n            }\r\n\r\n            .key-value-tags__item-inputs {\r\n                display: flex;\r\n                gap: var(--uui-size-space-3);\r\n                width: 100%;\r\n            }\r\n\r\n            .key-value-tags__item-inputs uui-input {\r\n                flex: 1;\r\n                min-height: 40px;\r\n            }\r\n\r\n            /* Drag handle - first column */\r\n            .drag-handle {\r\n                grid-column: 1;\r\n                cursor: move;\r\n                color: var(--uui-color-text-alt);\r\n                min-width: 40px;\r\n                min-height: 40px;\r\n                width: 40px;\r\n                height: 40px;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                align-self: start;\r\n            }\r\n\r\n            /* Remove button - last column */\r\n            uui-button[label=\"Remove\"] {\r\n                grid-column: 3;\r\n                width: 55.0278px;\r\n                height: 40px;\r\n                min-height: 40px;\r\n                align-self: start;\r\n            }\r\n\r\n            /* Tags input */\r\n            umb-tags-input {\r\n                width: 100%;\r\n            }\r\n\r\n            /* Common button styles */\r\n            .key-value-tags uui-button {\r\n                height: var(--uui-button-height);\r\n                border: 1px solid var(--uui-color-border);\r\n                border-radius: var(--uui-border-radius);\r\n                transition: all 120ms ease;\r\n            }\r\n\r\n            /* Add item button */\r\n            .add-item-container {\r\n                grid-column: 2;\r\n                display: flex;\r\n                align-items: center;\r\n            }\r\n\r\n            .add-item-container uui-button {\r\n                border-color: var(--uui-color-primary);\r\n            }\r\n\r\n            /* Draggable styles  */\r\n            .draggable-mirror {\r\n                background: var(--uui-color-surface);\r\n                border: 1px solid var(--uui-color-border-emphasis);\r\n                border-radius: var(--uui-border-radius);\r\n                padding: var(--uui-size-space-4);\r\n                box-shadow: var(--uui-shadow-depth-3);\r\n                opacity: 0.9;\r\n            }\r\n\r\n            .draggable-source--is-dragging {\r\n                opacity: 0.3;\r\n                border: 1px dashed var(--uui-color-border);\r\n            }\r\n\r\n            .key-value-tags__item-header {\r\n                display: grid;\r\n                grid-template-columns: auto 1fr auto;\r\n                gap: var(--uui-size-space-3);\r\n                align-items: center;\r\n            }\r\n        `\r\n    ];\r\n\r\n    #onAdd() {\r\n        const newItems = [\r\n            ...this._items,\r\n            { title: '', key: '', tags: [] }\r\n        ];\r\n        this._items = newItems;\r\n        this.#sorter.setModel(newItems);\r\n        this.dispatchChange();\r\n    }\r\n\r\n    #onRemove(index: number) {\r\n        const newItems = this._items.filter((_, i) => i !== index);\r\n        this._items = newItems;\r\n        this.#sorter.setModel(newItems);\r\n        this.dispatchChange();\r\n    }\r\n\r\n    #onTitleChange(index: number, event: Event) {\r\n        const input = event.target as HTMLInputElement;\r\n        this._items = this._items.map((item, i) =>\r\n            i === index ? { ...item, title: input.value } : item\r\n        );\r\n        this.dispatchChange();\r\n    }\r\n\r\n    #onKeyChange(index: number, event: Event) {\r\n        const input = event.target as HTMLInputElement;\r\n        this._items = this._items.map((item, i) =>\r\n            i === index ? { ...item, key: input.value } : item\r\n        );\r\n        this.dispatchChange();\r\n    }\r\n\r\n    #onTagsChange(index: number, event: CustomEvent) {\r\n        const tags = ((event.target as UmbTagsInputElement).value as string)\r\n            .split(',')\r\n            .filter(tag => tag.trim() !== '');\r\n\r\n        this._items = this._items.map((item, i) =>\r\n            i === index ? { ...item, tags } : item\r\n        );\r\n        this.dispatchChange();\r\n    }\r\n}\r\n\r\nexport default KeyValueTagsEditorElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'key-value-tags-editor': KeyValueTagsEditorElement;\r\n    }\r\n} "],"names":["_sorter","_readonly","_KeyValueTagsEditorElement_instances","onAdd_fn","onRemove_fn","onTitleChange_fn","onKeyChange_fn","onTagsChange_fn","KeyValueTagsEditorElement","UmbLitElement","__privateAdd","UmbSorterController","model","oldValue","item","title","key","__privateGet","value","__privateSet","changedProperties","UmbPropertyValueChangeEvent","html","repeat","index","itemId","e","__privateMethod","newItems","_","i","event","input","tags","tag","element","css","__decorateClass","property","state","customElement","KeyValueTagsEditorElement$1"],"mappings":"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"}